{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OWNER\\\\Desktop\\\\B\\\\weather_app\\\\src\\\\App.js\";\nimport React from 'react'; //import { Map, GoogleApiWrapper, Marker  } from 'google-maps-react';\n\nimport './App.css';\nimport Display from './components/display';\nimport Info from './components/info';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      image: {},\n      description: [],\n      cryptocurrency: [],\n      homepage: [],\n      market_data: [],\n      tickers: []\n    };\n\n    this.addPerson = newPerson => {\n      //var present = new Date();\n      //const year =  present.getFullYear();\n      //const date =  present.getDate();\n      //const month =  present.getMonth()+1;\n      //newPerson.id = Math.floor(Math.random()*10);\n      // console.log(newPerson);\n      // this.state.people.push(newPerson) never update state where you change the original value\n      let newarr = [newPerson]; //console.log(newarr)\n\n      this.setState({\n        city: newarr\n      });\n      console.log(newarr[0]);\n      const cors = `https://cors-anywhere.herokuapp.com/`;\n      axios.get(cors + `https://api.coingecko.com/api/v3/coins/bitcoin`).then(resolve => {\n        if (resolve.data.length < 1) {\n          //console.log(resolve.data);\n          alert(\"please search with perfect spelling\");\n        } else {\n          console.log(resolve.data);\n          const lang = newarr[0].name;\n          if (newarr[0].name === \"english\") resolve.data.desciption.en = resolve.data.description.newarr.name[0];\n          this.setState({\n            description: resolve.data.description[`${newarr[0].name}`],\n            image: resolve.data.image,\n            cryptocurrency: resolve.data.categories,\n            homepage: [resolve.data.links.homepage[0], resolve.data.links.repos_url.github[0]],\n            tickers: resolve.data.tickers,\n            market_data: resolve.data.market_data.current_price\n          });\n        }\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.tickers);\n    console.log(this.state.description); // navigator.geolocation.getCurrentPosition(function(position) {\n    //console.log(\"Latitude is :\", position.coords.latitude);\n    //console.log(\"Longitude is :\", position.coords.longitude);\n    //var latt = position.coords.latitude;\n    //var long = position.coords.longitude;\n    //const api_key = `AIzaSyCSWPtEdFxt9M_Xa6trJf0zY9zzxYXXhqs`;\n    //console.log(latt)\n    //});\n  } //componentDidUpdate(prevProp, PrevState){\n  //console.log(\"yes it is\")\n  //console.log(prevProp, PrevState);\n  //console.log(this.state)\n  //}\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"center purple-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, \"WEATHER-APP\"), /*#__PURE__*/React.createElement(Info, {\n      addPerson: this.addPerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 3\n      }\n    }, this.state.cryptocurrency[0]), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.image.large,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 3\n      }\n    }, this.state.market_data.aed), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 3\n      }\n    }, this.state.description), /*#__PURE__*/React.createElement(\"a\", {\n      href: this.state.homepage[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 3\n      }\n    }, \"click here to go to homepage\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 68\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: this.state.homepage[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 3\n      }\n    }, \"click here to go to repos_url\"), /*#__PURE__*/React.createElement(Display, {\n      tickers: this.state.tickers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 3\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/OWNER/Desktop/B/weather_app/src/App.js"],"names":["React","Display","Info","axios","App","Component","state","image","description","cryptocurrency","homepage","market_data","tickers","addPerson","newPerson","newarr","setState","city","console","log","cors","get","then","resolve","data","length","alert","lang","name","desciption","en","categories","links","repos_url","github","current_price","componentDidUpdate","render","large","aed"],"mappings":"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","sourcesContent":["import React from 'react';\n//import { Map, GoogleApiWrapper, Marker  } from 'google-maps-react';\nimport './App.css';\nimport Display from './components/display';\nimport Info from './components/info';\nimport axios from 'axios';\n\nclass App extends React.Component{\n  state={ image:{},\n          description: [],\n          cryptocurrency:[],\n          homepage:[],\n          market_data:[],\n          tickers:[]\n\n}\n \n\n\n\naddPerson = (newPerson) =>{\n  \n  //var present = new Date();\n  //const year =  present.getFullYear();\n  //const date =  present.getDate();\n  //const month =  present.getMonth()+1;\n  //newPerson.id = Math.floor(Math.random()*10);\n // console.log(newPerson);\n // this.state.people.push(newPerson) never update state where you change the original value\n let newarr = [newPerson];\n //console.log(newarr)\n \n this.setState({\n   city : newarr\n })\n console.log(newarr[0])\n const cors = `https://cors-anywhere.herokuapp.com/` \n  axios.get(cors+`https://api.coingecko.com/api/v3/coins/bitcoin`)\n   .then( resolve => {\n     if(resolve.data.length < 1)\n     {//console.log(resolve.data);\n     alert(\"please search with perfect spelling\");\n    }\n            else{\n\n     console.log(resolve.data);\n     const lang = newarr[0].name;\n     if(newarr[0].name === \"english\")\n     resolve.data.desciption.en = resolve.data.description.newarr.name[0]\n     this.setState({\n       description : resolve.data.description[`${newarr[0].name}`],\n       image : resolve.data.image,\n       cryptocurrency: resolve.data.categories,\n       homepage:[resolve.data.links.homepage[0],resolve.data.links.repos_url.github[0]], \n       tickers:resolve.data.tickers,\n       market_data:resolve.data.market_data.current_price \n        \n      })\n\n    \n     \n    }}\n    )\n}\n\n\ncomponentDidUpdate(){\n  console.log(this.state.tickers)\n  console.log(this.state.description)\n // navigator.geolocation.getCurrentPosition(function(position) {\n    //console.log(\"Latitude is :\", position.coords.latitude);\n    //console.log(\"Longitude is :\", position.coords.longitude);\n    //var latt = position.coords.latitude;\n    //var long = position.coords.longitude;\n    //const api_key = `AIzaSyCSWPtEdFxt9M_Xa6trJf0zY9zzxYXXhqs`;\n    //console.log(latt)\n  //});\n  \n    \n\n  }\n\n\n\n//componentDidUpdate(prevProp, PrevState){\n  //console.log(\"yes it is\")\n  //console.log(prevProp, PrevState);\n  //console.log(this.state)\n//}\n  render(){\n   \n  return (\n    <div className=\"App\">\n      <h1 className='center purple-text'>WEATHER-APP</h1>\n      <Info addPerson={this.addPerson}></Info>\n  <h2>{this.state.cryptocurrency[0]}</h2>\n      <img src={this.state.image.large} alt=\"\"></img>\n  <p>{this.state.market_data.aed}</p>\n  <p>{this.state.description}</p>\n  <a href={this.state.homepage[0]}>click here to go to homepage</a><br/>\n  <a href={this.state.homepage[1]}>click here to go to repos_url</a>\n  <Display tickers={this.state.tickers}></Display>\n     \n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}