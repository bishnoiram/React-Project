{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OWNER\\\\Desktop\\\\weather_app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport './App.css';\nimport Display from './components/display';\nimport Info from './components/info';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: [],\n      people: [],\n      weather: [],\n      ciphi: [],\n      location: [{\n        latt: '',\n        long: ''\n      }]\n    };\n\n    this.deleteperson = woeid => {\n      //console.log(woeid);\n      let newPeople = this.state.people.filter(person => {\n        return person.woeid !== woeid;\n      }); //console.log(newPeople);\n\n      this.setState({\n        people: newPeople\n      });\n    };\n\n    this.addPerson = newPerson => {\n      var present = new Date();\n      const year = present.getFullYear();\n      const date = present.getDate();\n      const month = present.getMonth() + 1; //newPerson.id = Math.floor(Math.random()*10);\n      // console.log(newPerson);\n      // this.state.people.push(newPerson) never update state where you change the original value\n\n      let newarr = [newPerson]; //console.log(newarr)\n\n      this.setState({\n        city: newarr\n      });\n      const cors = `https://cors-anywhere.herokuapp.com/`;\n      axios.get(cors + `https://www.metaweather.com/api/location/search/?query=${newarr[0].name}`).then(resolve => {\n        if (resolve.data.length !== 1) {\n          //console.log(resolve.data);\n          alert(\"please search with perfect spelling\");\n        } else {\n          //console.log(resolve.data);\n          this.setState({\n            people: resolve.data\n          }); //\n          // for(var i=0;i<11.;i++){\n\n          axios.get(cors + `https://www.metaweather.com/api/location/${this.state.people[0].woeid}`).then(resolve => {\n            console.log(resolve.data.consolidated_weather); //maximum temprature\n            // var maxtemp = resolve.data.consolidated_weather[0].max_temp\n\n            resolve.data.consolidated_weather[0].max_temp = resolve.data.consolidated_weather[0].max_temp.toFixed(2); //minimum temprature\n            //var mintemp = resolve.data.consolidated_weather[0].min_temp\n\n            resolve.data.consolidated_weather[0].the_temp = resolve.data.consolidated_weather[0].the_temp.toFixed(2);\n            resolve.data.consolidated_weather[0].min_temp = resolve.data.consolidated_weather[0].min_temp.toFixed(2); //var temp= `https://www.metaweather.com/static/img/weather/${resolve.data.consolidated_weather[0].weather_state_abbr}.svg`;\n            //console.log(temp)\n\n            this.setState({\n              weather: resolve.data.consolidated_weather[0]\n            });\n            axios.get(cors + `https://www.metaweather.com/api/location/${this.state.people[0].woeid}/${year}/${month}/${date}/`).then(resolve => {\n              // console.log(resolve.data[0])\n              this.setState({\n                ciphi: resolve.data[0]\n              });\n            }); //  for(var i=0;i<11;i++){\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude); //var latt = position.coords.latitude;\n      //var long = position.coords.longitude;\n      //const api_key = `AIzaSyCSWPtEdFxt9M_Xa6trJf0zY9zzxYXXhqs`;\n\n      console.log(latt);\n    });\n  } //componentDidUpdate(prevProp, PrevState){\n  //console.log(\"yes it is\")\n  //console.log(prevProp, PrevState);\n  //console.log(this.state)\n  //}\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"center purple-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, \"WEATHER-APP\"), /*#__PURE__*/React.createElement(Info, {\n      addPerson: this.addPerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Display, {\n      people: this.state.people,\n      weather: this.state.weather,\n      ciphi: this.state.ciphi,\n      deletePerson: this.deleteperson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/OWNER/Desktop/weather_app/src/App.js"],"names":["React","Map","GoogleApiWrapper","Marker","Display","Info","axios","App","Component","state","city","people","weather","ciphi","location","latt","long","deleteperson","woeid","newPeople","filter","person","setState","addPerson","newPerson","present","Date","year","getFullYear","date","getDate","month","getMonth","newarr","cors","get","name","then","resolve","data","length","alert","console","log","consolidated_weather","max_temp","toFixed","the_temp","min_temp","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,QAA+C,mBAA/C;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACzB;AAAEC,MAAAA,IAAI,EAAC,EAAP;AACEC,MAAAA,MAAM,EAAE,EADV;AAEEC,MAAAA,OAAO,EAAC,EAFV;AAGEC,MAAAA,KAAK,EAAC,EAHR;AAIEC,MAAAA,QAAQ,EAAC,CAAC;AAACC,QAAAA,IAAI,EAAC,EAAN;AACEC,QAAAA,IAAI,EAAC;AADP,OAAD;AAJX,KADyB;;AAAA,SAWjCC,YAXiC,GAWjBC,KAAD,IAAU;AACvB;AACA,UAAIC,SAAS,GAAG,KAAKV,KAAL,CAAWE,MAAX,CAAkBS,MAAlB,CAA0BC,MAAM,IAAG;AACjD,eAAOA,MAAM,CAACH,KAAP,KAAiBA,KAAxB;AACD,OAFe,CAAhB,CAFuB,CAKvB;;AACA,WAAKI,QAAL,CAAc;AACZX,QAAAA,MAAM,EAAGQ;AADG,OAAd;AAGD,KApBgC;;AAAA,SAsBjCI,SAtBiC,GAsBpBC,SAAD,IAAc;AAExB,UAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,YAAMC,IAAI,GAAIF,OAAO,CAACG,WAAR,EAAd;AACA,YAAMC,IAAI,GAAIJ,OAAO,CAACK,OAAR,EAAd;AACA,YAAMC,KAAK,GAAIN,OAAO,CAACO,QAAR,KAAmB,CAAlC,CALwB,CAMxB;AACD;AACA;;AACA,UAAIC,MAAM,GAAG,CAACT,SAAD,CAAb,CATyB,CAUzB;;AAEA,WAAKF,QAAL,CAAc;AACZZ,QAAAA,IAAI,EAAGuB;AADK,OAAd;AAGA,YAAMC,IAAI,GAAI,sCAAd;AACC5B,MAAAA,KAAK,CAAC6B,GAAN,CAAUD,IAAI,GAAE,0DAAyDD,MAAM,CAAC,CAAD,CAAN,CAAUG,IAAK,EAAxF,EACEC,IADF,CACQC,OAAO,IAAI;AAChB,YAAGA,OAAO,CAACC,IAAR,CAAaC,MAAb,KAAwB,CAA3B,EACA;AAAC;AACDC,UAAAA,KAAK,CAAC,qCAAD,CAAL;AACA,SAHA,MAIW;AAEX;AACA,eAAKnB,QAAL,CAAc;AACZX,YAAAA,MAAM,EAAG2B,OAAO,CAACC;AADL,WAAd,EAHW,CAMX;AACD;;AACAjC,UAAAA,KAAK,CAAC6B,GAAN,CAAUD,IAAI,GAAE,4CAA2C,KAAKzB,KAAL,CAAWE,MAAX,CAAkB,CAAlB,EAAqBO,KAAM,EAAtF,EACCmB,IADD,CACOC,OAAO,IAAI;AAChBI,YAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACC,IAAR,CAAaK,oBAAzB,EADgB,CAEhB;AACD;;AACCN,YAAAA,OAAO,CAACC,IAAR,CAAaK,oBAAb,CAAkC,CAAlC,EAAqCC,QAArC,GAAgDP,OAAO,CAACC,IAAR,CAAaK,oBAAb,CAAkC,CAAlC,EAAqCC,QAArC,CAA8CC,OAA9C,CAAsD,CAAtD,CAAhD,CAJgB,CAKhB;AACA;;AACAR,YAAAA,OAAO,CAACC,IAAR,CAAaK,oBAAb,CAAkC,CAAlC,EAAqCG,QAArC,GAAgDT,OAAO,CAACC,IAAR,CAAaK,oBAAb,CAAkC,CAAlC,EAAqCG,QAArC,CAA8CD,OAA9C,CAAsD,CAAtD,CAAhD;AACAR,YAAAA,OAAO,CAACC,IAAR,CAAaK,oBAAb,CAAkC,CAAlC,EAAqCI,QAArC,GAAgDV,OAAO,CAACC,IAAR,CAAaK,oBAAb,CAAkC,CAAlC,EAAqCI,QAArC,CAA8CF,OAA9C,CAAsD,CAAtD,CAAhD,CARgB,CAShB;AACA;;AACA,iBAAKxB,QAAL,CAAc;AACZV,cAAAA,OAAO,EAAG0B,OAAO,CAACC,IAAR,CAAaK,oBAAb,CAAkC,CAAlC;AADE,aAAd;AAIFtC,YAAAA,KAAK,CAAC6B,GAAN,CAAUD,IAAI,GAAE,4CAA2C,KAAKzB,KAAL,CAAWE,MAAX,CAAkB,CAAlB,EAAqBO,KAAM,IAAGS,IAAK,IAAGI,KAAM,IAAGF,IAAK,GAA/G,EACCQ,IADD,CACMC,OAAO,IAAI;AAChB;AACC,mBAAKhB,QAAL,CAAc;AACZT,gBAAAA,KAAK,EAACyB,OAAO,CAACC,IAAR,CAAa,CAAb;AADM,eAAd;AAGD,aAND,EAfkB,CAsBlB;AACC,WAxBD;AA2BA;AAAC,OAzCH;AA2CD,KAjFgC;AAAA;;AAoFjCU,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AAC1DX,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BU,QAAQ,CAACC,MAAT,CAAgBC,QAA7C;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BU,QAAQ,CAACC,MAAT,CAAgBE,SAA9C,EAF0D,CAG1D;AACA;AACA;;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAY5B,IAAZ;AACD,KAPD;AAQD,GA7FgC,CAgGjC;AACE;AACA;AACA;AACF;;;AACE0C,EAAAA,MAAM,GAAE;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,KAAKlC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAI,KAAKd,KAAL,CAAWE,MAA9B;AAAsC,MAAA,OAAO,EAAI,KAAKF,KAAL,CAAWG,OAA5D;AAAqE,MAAA,KAAK,EAAG,KAAKH,KAAL,CAAWI,KAAxF;AAA+F,MAAA,YAAY,EAAI,KAAKI,YAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AASD;;AA/GgC;;AAkHjC,eAAeV,GAAf","sourcesContent":["import React from 'react';\nimport { Map, GoogleApiWrapper, Marker  } from 'google-maps-react';\nimport './App.css';\nimport Display from './components/display';\nimport Info from './components/info';\nimport axios from 'axios';\n\nclass App extends React.Component{\n  state={ city:[],\n          people: [],\n          weather:[],\n          ciphi:[],\n          location:[{latt:'',\n                      long:'',        \n                    }]\n}\n \n\ndeleteperson = (woeid) =>{\n  //console.log(woeid);\n  let newPeople = this.state.people.filter( person =>{\n    return person.woeid !== woeid \n  });\n  //console.log(newPeople);\n  this.setState({\n    people : newPeople\n  })\n}\n\naddPerson = (newPerson) =>{\n  \n  var present = new Date();\n  const year =  present.getFullYear();\n  const date =  present.getDate();\n  const month =  present.getMonth()+1;\n  //newPerson.id = Math.floor(Math.random()*10);\n // console.log(newPerson);\n // this.state.people.push(newPerson) never update state where you change the original value\n let newarr = [newPerson];\n //console.log(newarr)\n \n this.setState({\n   city : newarr\n })\n const cors = `https://cors-anywhere.herokuapp.com/` \n  axios.get(cors+`https://www.metaweather.com/api/location/search/?query=${newarr[0].name}`)\n   .then( resolve => {\n     if(resolve.data.length !== 1)\n     {//console.log(resolve.data);\n     alert(\"please search with perfect spelling\");\n    }\n            else{\n\n     //console.log(resolve.data);\n     this.setState({\n       people : resolve.data\n     })\n     //\n    // for(var i=0;i<11.;i++){\n    axios.get(cors+`https://www.metaweather.com/api/location/${this.state.people[0].woeid}`)\n    .then( resolve => {\n      console.log(resolve.data.consolidated_weather);\n      //maximum temprature\n     // var maxtemp = resolve.data.consolidated_weather[0].max_temp\n      resolve.data.consolidated_weather[0].max_temp = resolve.data.consolidated_weather[0].max_temp.toFixed(2);\n      //minimum temprature\n      //var mintemp = resolve.data.consolidated_weather[0].min_temp\n      resolve.data.consolidated_weather[0].the_temp = resolve.data.consolidated_weather[0].the_temp.toFixed(2);\n      resolve.data.consolidated_weather[0].min_temp = resolve.data.consolidated_weather[0].min_temp.toFixed(2);\n      //var temp= `https://www.metaweather.com/static/img/weather/${resolve.data.consolidated_weather[0].weather_state_abbr}.svg`;\n      //console.log(temp)\n      this.setState({\n        weather : resolve.data.consolidated_weather[0]\n        \n      })\n    axios.get(cors+`https://www.metaweather.com/api/location/${this.state.people[0].woeid}/${year}/${month}/${date}/`)\n    .then(resolve => {\n     // console.log(resolve.data[0])\n      this.setState({\n        ciphi:resolve.data[0]\n      })\n    })\n    //  for(var i=0;i<11;i++){\n    })\n  \n     \n   }}\n  )\n}\n\n\ncomponentDidMount(){\n  navigator.geolocation.getCurrentPosition(function(position) {\n    console.log(\"Latitude is :\", position.coords.latitude);\n    console.log(\"Longitude is :\", position.coords.longitude);\n    //var latt = position.coords.latitude;\n    //var long = position.coords.longitude;\n    //const api_key = `AIzaSyCSWPtEdFxt9M_Xa6trJf0zY9zzxYXXhqs`;\n    console.log(latt)\n  });\n}\n\n\n//componentDidUpdate(prevProp, PrevState){\n  //console.log(\"yes it is\")\n  //console.log(prevProp, PrevState);\n  //console.log(this.state)\n//}\n  render(){\n  return (\n    <div className=\"App\">\n      <h1 className='center purple-text'>WEATHER-APP</h1>\n      <Info addPerson={this.addPerson}></Info>\n      {\n      <Display people = {this.state.people} weather = {this.state.weather} ciphi= {this.state.ciphi} deletePerson = {this.deleteperson}></Display>\n      }\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}