{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OWNER\\\\Desktop\\\\weather_app\\\\src\\\\components\\\\display.js\";\nimport React from 'react';\nimport './Display.css'; //fuctional component/ UI\n\nconst Display = ({\n  people,\n  deletePerson,\n  weather\n}) => {\n  //console.log(props);\n  //let {name,age,job} = props\n  //console.log(people)\n  const peoplelist = people.length ? people.map(person => {\n    var present = new Date();\n    const hour = present.getHours();\n    const minute = present.getMinutes();\n    const day = present.getUTCDay();\n\n    switch (day) {\n      case 1:\n        var today = \"monday\";\n        break;\n\n      case 2:\n        today = \"tuesday\";\n        break;\n\n      case 3:\n        today = \"wednesday\";\n        break;\n\n      case 4:\n        today = \"thursday\";\n        break;\n\n      case 5:\n        today = \"friday\";\n        break;\n\n      case 6:\n        today = \"saturday\";\n        break;\n\n      case 7:\n        today = \"sunday\";\n        break;\n    }\n\n    let {\n      title,\n      woeid\n    } = person;\n    let {\n      max_temp,\n      min_temp,\n      humidity,\n      the_temp,\n      applicable_date,\n      weather_state_name,\n      weather_state_abbr,\n      air_pressure,\n      predictability,\n      wind_direction_compass,\n      wind_speed\n    } = weather;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"responseDiv\",\n      key: woeid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"today's date:\", applicable_date, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 63\n      }\n    }), \"Day:\", today), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"city\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"diffrence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, \"max_temp:\", max_temp), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"diffrence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    }, \"min_temp:\", min_temp), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"diffrence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, \"humidity:\", humidity), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"diffrence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, \"air pressure:\", air_pressure), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"diffrence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, \"Rain predictability:\", predictability), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"diffrence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, \"wind direction:\", wind_direction_compass), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"diffrence\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, \"wind speed:\", wind_speed, \"/MPS\"), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }, \"current_temp:\", the_temp), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"image\",\n      src: `https://www.metaweather.com/static/img/weather/${weather_state_abbr}.svg`,\n      alt: \"\",\n      name: \"image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }, weather_state_name));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }\n  }); //console.log(peoplelist);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, peoplelist);\n};\n\nexport default Display;","map":{"version":3,"sources":["C:/Users/OWNER/Desktop/weather_app/src/components/display.js"],"names":["React","Display","people","deletePerson","weather","peoplelist","length","map","person","present","Date","hour","getHours","minute","getMinutes","day","getUTCDay","today","title","woeid","max_temp","min_temp","humidity","the_temp","applicable_date","weather_state_name","weather_state_abbr","air_pressure","predictability","wind_direction_compass","wind_speed"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Display.css'\r\n\r\n\r\n//fuctional component/ UI\r\nconst Display = ({people, deletePerson, weather}) => {\r\n\r\n\r\n    \r\n    //console.log(props);\r\n\r\n    //let {name,age,job} = props\r\n    //console.log(people)\r\n    const peoplelist = people.length ? people.map( person =>{\r\n        var present = new Date();\r\n        const hour= present.getHours();\r\n        const minute = present.getMinutes();\r\n        const day = present.getUTCDay();\r\n        switch(day){\r\n            case 1:var today=\"monday\";break;\r\n            case 2:today=\"tuesday\";break;\r\n            case 3:today=\"wednesday\";break;\r\n            case 4:today=\"thursday\";break;\r\n            case 5:today=\"friday\";break;\r\n            case 6:today=\"saturday\";break;\r\n            case 7:today=\"sunday\";break;\r\n        }\r\n\r\n        let {title,woeid} = person;\r\n        let{max_temp,min_temp,humidity,the_temp,applicable_date,weather_state_name,weather_state_abbr,air_pressure,predictability,wind_direction_compass,wind_speed}=weather;\r\n    return(\r\n        \r\n        <div className=\"responseDiv\" key={woeid}>\r\n            <p className=\"date\">today's date:{applicable_date}<br/>Day:{today}</p>\r\n            <h1 className='city'>{title}</h1>\r\n    <p className=\"diffrence\">max_temp:{max_temp}</p>   \r\n    <p className=\"diffrence\">min_temp:{min_temp}</p> \r\n    <p className=\"diffrence\">humidity:{humidity}</p>\r\n    <p className=\"diffrence\">air pressure:{air_pressure}</p>\r\n    <p className=\"diffrence\">Rain predictability:{predictability}</p>\r\n    <p className=\"diffrence\">wind direction:{wind_direction_compass}</p>\r\n    <p className=\"diffrence\">wind speed:{wind_speed}/MPS</p>\r\n    <h1 className=\"header\">current_temp:{the_temp}</h1>\r\n    \r\n   \r\n    \r\n    <img className='image' src={`https://www.metaweather.com/static/img/weather/${weather_state_abbr}.svg`}  alt = \"\"name=\"image\"></img>\r\n    <h1>{weather_state_name}</h1>\r\n\r\n\r\n                   </div>\r\n    )\r\n    }):<p></p>\r\n\r\n    //console.log(peoplelist);\r\n\r\n    return(\r\n        <div>\r\n            {peoplelist}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Display;"]},"metadata":{},"sourceType":"module"}